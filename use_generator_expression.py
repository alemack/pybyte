# Допустим, есть исходный список:
numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

# Генераторное выражение: такое же выражение, как и в list comprehension,
# но в круглых скобках - и результат не список, а итератор.
gen = (2 * x for x in numbers if x % 2 == 0)

# gen - это ленивый генератор: он не хранит сразу все значения,
# а вычисляет их по мере надобности.
print(gen)
# <generator object <genexpr> at 0x…>

# Можно итерироваться по нему в for:
for value in gen:
    print(value)
# Выведет:
# 4
# 8
# 12

# Если попытаться снова пройтись по gen, ничего не напечатает,
# потому что генератор уже исчерпан
for value in gen:
    print(value) # - ничего

# Чтобы получить все значения разом в виде списка, можно обернуть в list():
gen = (2 * x for x in numbers if x % 2 == 0)
print(list(gen)) # [4, 8, 12, 16, 20]
